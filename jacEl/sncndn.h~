#ifndef SNCNDN_H
#define SNCNDN_H

#include <arprec/mp_real.h>
#include <arprec/mp_complex.h>

#include <math.h>
#include <complex>
#include <limits>
#include <iostream>
#include <stdio.h>

typedef std::complex<double> cpxDbl;


void ellKKP(mp_real L,mp_real &K,mp_real &Kp);
void ellKKP(double L,double &K,double &Kp);

/*void sncndn(double uu, double emmc, mp_real &sn, mp_real &cn, mp_real &dn);
void sncndn2(mp_real u,mp_real m,mp_real &sn,mp_real &cn,mp_real &dn,mp_real &am);
void sncndn2(double u,double m,double &sn,double &cn,double &dn);
void sncndn2(mp_complex u,mp_real m, mp_complex &sn, mp_complex &cn, mp_complex &dn);*/


mp_complex poly_six(mp_complex mmf);
void recursiveSNCNDN(mp_complex u,mp_complex m, mp_complex &sn, mp_complex &cn, mp_complex &dn);
void recursiveSNCNDN(cpxDbl u,double m, cpxDbl &sn, cpxDbl &cn, cpxDbl &dn);
void recursiveSNCNDN(double u,double m, double &sn, double &cn, double &dn);




void sqrtIntPoints(int N,double minEig,double maxEig,double *intConst,double *wsq,double *dzdt);

#endif
